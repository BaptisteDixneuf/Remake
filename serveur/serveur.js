// Generated by CoffeeScript 1.8.0
var Joueur, app, compteurJoueur, deplacement_joueur, fs, handler, io, joueurs, uniqueId;

app = require("http").createServer(handler);

io = require("socket.io")(app);

fs = require("fs");

app.listen(80);

console.log("Serveur OK");

handler = function(req, res) {
  fs.readFile(__dirname + "/index.html", function(err, data) {
    if (err) {
      res.writeHead(500);
      return res.end("Error loading index.html");
    }
    res.writeHead(200);
    res.end(data);
  });
};

uniqueId = function(length) {
  var id;
  if (length == null) {
    length = 8;
  }
  id = "";
  while (id.length < length) {
    id += Math.random().toString(36).substr(2);
  }
  return id.substr(0, length);
};

joueurs = [];

Joueur = (function() {
  function Joueur(id) {
    this.id = id;
    this.x = 0;
    this.y = 0;
  }

  return Joueur;

})();

deplacement_joueur = function(id, direction) {
  if (direction === "haut") {
    joueurs[id].y = joueurs[id].y + 1;
  }
  if (direction === "bas") {
    joueurs[id].y = joueurs[id].y - 1;
  }
  if (direction === "droite") {
    joueurs[id].x = joueurs[id].x + 1;
  }
  if (direction === "gauche") {
    return joueurs[id].x = joueurs[id].x - 1;
  }
};

compteurJoueur = 0;

io.on("connection", function(socket) {
  var idjoueur, nouveauJoueur;
  console.log("Nouveau utilisateur");
  idjoueur = compteurJoueur;
  nouveauJoueur = new Joueur(idjoueur);
  compteurJoueur++;
  joueurs.push(nouveauJoueur);
  socket.emit("init_joueur", joueurs);
  socket.broadcast.emit("nouveau_joueur", nouveauJoueur);
  socket.on("deplacement", function(data) {
    deplacement_joueur(data.idjoueur, data.direction);
    io.sockets.emit("deplacement_joueur", data);
    return false;
  });
});
